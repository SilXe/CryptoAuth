export const ABI = [
    {
        inputs: [{ internalType: 'bool', name: 'test', type: 'bool' }],
        stateMutability: 'nonpayable',
        type: 'constructor',
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: false,
                internalType: 'uint256',
                name: 'delay',
                type: 'uint256',
            },
        ],
        name: 'CommissionUpdateDelaySet',
        type: 'event',
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: false,
                internalType: 'uint256',
                name: 'value',
                type: 'uint256',
            },
            {
                indexed: false,
                internalType: 'uint256',
                name: 'duration',
                type: 'uint256',
            },
        ],
        name: 'GroupLockedGoldRequirementsSet',
        type: 'event',
    },
    {
        anonymous: false,
        inputs: [{ indexed: false, internalType: 'uint256', name: 'size', type: 'uint256' }],
        name: 'MaxGroupSizeSet',
        type: 'event',
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: false,
                internalType: 'uint256',
                name: 'length',
                type: 'uint256',
            },
        ],
        name: 'MembershipHistoryLengthSet',
        type: 'event',
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: true,
                internalType: 'address',
                name: 'previousOwner',
                type: 'address',
            },
            {
                indexed: true,
                internalType: 'address',
                name: 'newOwner',
                type: 'address',
            },
        ],
        name: 'OwnershipTransferred',
        type: 'event',
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: true,
                internalType: 'address',
                name: 'registryAddress',
                type: 'address',
            },
        ],
        name: 'RegistrySet',
        type: 'event',
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: true,
                internalType: 'address',
                name: 'validator',
                type: 'address',
            },
            { indexed: true, internalType: 'address', name: 'group', type: 'address' },
        ],
        name: 'ValidatorAffiliated',
        type: 'event',
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: true,
                internalType: 'address',
                name: 'validator',
                type: 'address',
            },
            {
                indexed: false,
                internalType: 'bytes',
                name: 'blsPublicKey',
                type: 'bytes',
            },
        ],
        name: 'ValidatorBlsPublicKeyUpdated',
        type: 'event',
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: true,
                internalType: 'address',
                name: 'validator',
                type: 'address',
            },
            { indexed: true, internalType: 'address', name: 'group', type: 'address' },
        ],
        name: 'ValidatorDeaffiliated',
        type: 'event',
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: true,
                internalType: 'address',
                name: 'validator',
                type: 'address',
            },
        ],
        name: 'ValidatorDeregistered',
        type: 'event',
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: true,
                internalType: 'address',
                name: 'validator',
                type: 'address',
            },
            {
                indexed: false,
                internalType: 'bytes',
                name: 'ecdsaPublicKey',
                type: 'bytes',
            },
        ],
        name: 'ValidatorEcdsaPublicKeyUpdated',
        type: 'event',
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: true,
                internalType: 'address',
                name: 'validator',
                type: 'address',
            },
            {
                indexed: false,
                internalType: 'uint256',
                name: 'validatorPayment',
                type: 'uint256',
            },
            {
                indexed: true,
                internalType: 'address',
                name: 'group',
                type: 'address',
            },
            {
                indexed: false,
                internalType: 'uint256',
                name: 'groupPayment',
                type: 'uint256',
            },
        ],
        name: 'ValidatorEpochPaymentDistributed',
        type: 'event',
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: true,
                internalType: 'address',
                name: 'group',
                type: 'address',
            },
            {
                indexed: false,
                internalType: 'uint256',
                name: 'commission',
                type: 'uint256',
            },
            {
                indexed: false,
                internalType: 'uint256',
                name: 'activationBlock',
                type: 'uint256',
            },
        ],
        name: 'ValidatorGroupCommissionUpdateQueued',
        type: 'event',
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: true,
                internalType: 'address',
                name: 'group',
                type: 'address',
            },
            {
                indexed: false,
                internalType: 'uint256',
                name: 'commission',
                type: 'uint256',
            },
        ],
        name: 'ValidatorGroupCommissionUpdated',
        type: 'event',
    },
    {
        anonymous: false,
        inputs: [{ indexed: true, internalType: 'address', name: 'group', type: 'address' }],
        name: 'ValidatorGroupDeregistered',
        type: 'event',
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: true,
                internalType: 'address',
                name: 'group',
                type: 'address',
            },
            {
                indexed: true,
                internalType: 'address',
                name: 'validator',
                type: 'address',
            },
        ],
        name: 'ValidatorGroupMemberAdded',
        type: 'event',
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: true,
                internalType: 'address',
                name: 'group',
                type: 'address',
            },
            {
                indexed: true,
                internalType: 'address',
                name: 'validator',
                type: 'address',
            },
        ],
        name: 'ValidatorGroupMemberRemoved',
        type: 'event',
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: true,
                internalType: 'address',
                name: 'group',
                type: 'address',
            },
            {
                indexed: true,
                internalType: 'address',
                name: 'validator',
                type: 'address',
            },
        ],
        name: 'ValidatorGroupMemberReordered',
        type: 'event',
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: true,
                internalType: 'address',
                name: 'group',
                type: 'address',
            },
            {
                indexed: false,
                internalType: 'uint256',
                name: 'commission',
                type: 'uint256',
            },
        ],
        name: 'ValidatorGroupRegistered',
        type: 'event',
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: false,
                internalType: 'uint256',
                name: 'value',
                type: 'uint256',
            },
            {
                indexed: false,
                internalType: 'uint256',
                name: 'duration',
                type: 'uint256',
            },
        ],
        name: 'ValidatorLockedGoldRequirementsSet',
        type: 'event',
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: true,
                internalType: 'address',
                name: 'validator',
                type: 'address',
            },
        ],
        name: 'ValidatorRegistered',
        type: 'event',
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: false,
                internalType: 'uint256',
                name: 'exponent',
                type: 'uint256',
            },
            {
                indexed: false,
                internalType: 'uint256',
                name: 'adjustmentSpeed',
                type: 'uint256',
            },
        ],
        name: 'ValidatorScoreParametersSet',
        type: 'event',
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: true,
                internalType: 'address',
                name: 'validator',
                type: 'address',
            },
            {
                indexed: false,
                internalType: 'uint256',
                name: 'score',
                type: 'uint256',
            },
            {
                indexed: false,
                internalType: 'uint256',
                name: 'epochScore',
                type: 'uint256',
            },
        ],
        name: 'ValidatorScoreUpdated',
        type: 'event',
    },
    {
        inputs: [
            { internalType: 'address', name: 'sender', type: 'address' },
            { internalType: 'bytes', name: 'blsKey', type: 'bytes' },
            { internalType: 'bytes', name: 'blsPop', type: 'bytes' },
        ],
        name: 'checkProofOfPossession',
        outputs: [{ internalType: 'bool', name: '', type: 'bool' }],
        stateMutability: 'view',
        type: 'function',
    },
    {
        inputs: [],
        name: 'commissionUpdateDelay',
        outputs: [{ internalType: 'uint256', name: '', type: 'uint256' }],
        stateMutability: 'view',
        type: 'function',
    },
    {
        inputs: [],
        name: 'downtimeGracePeriod',
        outputs: [{ internalType: 'uint256', name: '', type: 'uint256' }],
        stateMutability: 'view',
        type: 'function',
    },
    {
        inputs: [
            { internalType: 'uint256', name: 'aNumerator', type: 'uint256' },
            { internalType: 'uint256', name: 'aDenominator', type: 'uint256' },
            { internalType: 'uint256', name: 'bNumerator', type: 'uint256' },
            { internalType: 'uint256', name: 'bDenominator', type: 'uint256' },
            { internalType: 'uint256', name: 'exponent', type: 'uint256' },
            { internalType: 'uint256', name: '_decimals', type: 'uint256' },
        ],
        name: 'fractionMulExp',
        outputs: [
            { internalType: 'uint256', name: '', type: 'uint256' },
            { internalType: 'uint256', name: '', type: 'uint256' },
        ],
        stateMutability: 'view',
        type: 'function',
    },
    {
        inputs: [{ internalType: 'bytes', name: 'header', type: 'bytes' }],
        name: 'getBlockNumberFromHeader',
        outputs: [{ internalType: 'uint256', name: '', type: 'uint256' }],
        stateMutability: 'view',
        type: 'function',
    },
    {
        inputs: [],
        name: 'getEpochNumber',
        outputs: [{ internalType: 'uint256', name: '', type: 'uint256' }],
        stateMutability: 'view',
        type: 'function',
    },
    {
        inputs: [{ internalType: 'uint256', name: 'blockNumber', type: 'uint256' }],
        name: 'getEpochNumberOfBlock',
        outputs: [{ internalType: 'uint256', name: '', type: 'uint256' }],
        stateMutability: 'view',
        type: 'function',
    },
    {
        inputs: [],
        name: 'getEpochSize',
        outputs: [{ internalType: 'uint256', name: '', type: 'uint256' }],
        stateMutability: 'view',
        type: 'function',
    },
    {
        inputs: [{ internalType: 'uint256', name: 'blockNumber', type: 'uint256' }],
        name: 'getParentSealBitmap',
        outputs: [{ internalType: 'bytes32', name: '', type: 'bytes32' }],
        stateMutability: 'view',
        type: 'function',
    },
    {
        inputs: [{ internalType: 'bytes', name: 'header', type: 'bytes' }],
        name: 'getVerifiedSealBitmapFromHeader',
        outputs: [{ internalType: 'bytes32', name: '', type: 'bytes32' }],
        stateMutability: 'view',
        type: 'function',
    },
    {
        inputs: [],
        name: 'groupLockedGoldRequirements',
        outputs: [
            { internalType: 'uint256', name: 'value', type: 'uint256' },
            { internalType: 'uint256', name: 'duration', type: 'uint256' },
        ],
        stateMutability: 'view',
        type: 'function',
    },
    {
        inputs: [{ internalType: 'bytes', name: 'header', type: 'bytes' }],
        name: 'hashHeader',
        outputs: [{ internalType: 'bytes32', name: '', type: 'bytes32' }],
        stateMutability: 'view',
        type: 'function',
    },
    {
        inputs: [],
        name: 'initialized',
        outputs: [{ internalType: 'bool', name: '', type: 'bool' }],
        stateMutability: 'view',
        type: 'function',
    },
    {
        inputs: [],
        name: 'maxGroupSize',
        outputs: [{ internalType: 'uint256', name: '', type: 'uint256' }],
        stateMutability: 'view',
        type: 'function',
    },
    {
        inputs: [],
        name: 'membershipHistoryLength',
        outputs: [{ internalType: 'uint256', name: '', type: 'uint256' }],
        stateMutability: 'view',
        type: 'function',
    },
    {
        inputs: [{ internalType: 'uint256', name: 'blockNumber', type: 'uint256' }],
        name: 'minQuorumSize',
        outputs: [{ internalType: 'uint256', name: '', type: 'uint256' }],
        stateMutability: 'view',
        type: 'function',
    },
    {
        inputs: [],
        name: 'minQuorumSizeInCurrentSet',
        outputs: [{ internalType: 'uint256', name: '', type: 'uint256' }],
        stateMutability: 'view',
        type: 'function',
    },
    {
        inputs: [],
        name: 'numberValidatorsInCurrentSet',
        outputs: [{ internalType: 'uint256', name: '', type: 'uint256' }],
        stateMutability: 'view',
        type: 'function',
    },
    {
        inputs: [{ internalType: 'uint256', name: 'blockNumber', type: 'uint256' }],
        name: 'numberValidatorsInSet',
        outputs: [{ internalType: 'uint256', name: '', type: 'uint256' }],
        stateMutability: 'view',
        type: 'function',
    },
    {
        inputs: [],
        name: 'owner',
        outputs: [{ internalType: 'address', name: '', type: 'address' }],
        stateMutability: 'view',
        type: 'function',
    },
    {
        inputs: [],
        name: 'registry',
        outputs: [{ internalType: 'contract IRegistry', name: '', type: 'address' }],
        stateMutability: 'view',
        type: 'function',
    },
    {
        inputs: [],
        name: 'renounceOwnership',
        outputs: [],
        stateMutability: 'nonpayable',
        type: 'function',
    },
    {
        inputs: [{ internalType: 'address', name: 'registryAddress', type: 'address' }],
        name: 'setRegistry',
        outputs: [],
        stateMutability: 'nonpayable',
        type: 'function',
    },
    {
        inputs: [],
        name: 'slashingMultiplierResetPeriod',
        outputs: [{ internalType: 'uint256', name: '', type: 'uint256' }],
        stateMutability: 'view',
        type: 'function',
    },
    {
        inputs: [{ internalType: 'address', name: 'newOwner', type: 'address' }],
        name: 'transferOwnership',
        outputs: [],
        stateMutability: 'nonpayable',
        type: 'function',
    },
    {
        inputs: [{ internalType: 'uint256', name: 'index', type: 'uint256' }],
        name: 'validatorAddressFromCurrentSet',
        outputs: [{ internalType: 'address', name: '', type: 'address' }],
        stateMutability: 'view',
        type: 'function',
    },
    {
        inputs: [],
        name: 'validatorLockedGoldRequirements',
        outputs: [
            { internalType: 'uint256', name: 'value', type: 'uint256' },
            { internalType: 'uint256', name: 'duration', type: 'uint256' },
        ],
        stateMutability: 'view',
        type: 'function',
    },
    {
        inputs: [{ internalType: 'uint256', name: 'index', type: 'uint256' }],
        name: 'validatorSignerAddressFromCurrentSet',
        outputs: [{ internalType: 'address', name: '', type: 'address' }],
        stateMutability: 'view',
        type: 'function',
    },
    {
        inputs: [
            { internalType: 'uint256', name: 'index', type: 'uint256' },
            { internalType: 'uint256', name: 'blockNumber', type: 'uint256' },
        ],
        name: 'validatorSignerAddressFromSet',
        outputs: [{ internalType: 'address', name: '', type: 'address' }],
        stateMutability: 'view',
        type: 'function',
    },
    {
        inputs: [
            { internalType: 'address', name: 'registryAddress', type: 'address' },
            {
                internalType: 'uint256',
                name: 'groupRequirementValue',
                type: 'uint256',
            },
            {
                internalType: 'uint256',
                name: 'groupRequirementDuration',
                type: 'uint256',
            },
            {
                internalType: 'uint256',
                name: 'validatorRequirementValue',
                type: 'uint256',
            },
            {
                internalType: 'uint256',
                name: 'validatorRequirementDuration',
                type: 'uint256',
            },
            {
                internalType: 'uint256',
                name: 'validatorScoreExponent',
                type: 'uint256',
            },
            {
                internalType: 'uint256',
                name: 'validatorScoreAdjustmentSpeed',
                type: 'uint256',
            },
            {
                internalType: 'uint256',
                name: '_membershipHistoryLength',
                type: 'uint256',
            },
            {
                internalType: 'uint256',
                name: '_slashingMultiplierResetPeriod',
                type: 'uint256',
            },
            { internalType: 'uint256', name: '_maxGroupSize', type: 'uint256' },
            {
                components: [
                    {
                        internalType: 'uint256',
                        name: 'commissionUpdateDelay',
                        type: 'uint256',
                    },
                    {
                        internalType: 'uint256',
                        name: 'downtimeGracePeriod',
                        type: 'uint256',
                    },
                ],
                internalType: 'struct Validators.InitParams',
                name: 'initParams',
                type: 'tuple',
            },
        ],
        name: 'initialize',
        outputs: [],
        stateMutability: 'nonpayable',
        type: 'function',
    },
    {
        inputs: [
            { internalType: 'address', name: 'signer', type: 'address' },
            { internalType: 'uint256', name: 'uptime', type: 'uint256' },
        ],
        name: 'updateValidatorScoreFromSigner',
        outputs: [],
        stateMutability: 'nonpayable',
        type: 'function',
    },
    {
        inputs: [
            { internalType: 'address', name: 'signer', type: 'address' },
            { internalType: 'uint256', name: 'maxPayment', type: 'uint256' },
        ],
        name: 'distributeEpochPaymentsFromSigner',
        outputs: [{ internalType: 'uint256', name: '', type: 'uint256' }],
        stateMutability: 'nonpayable',
        type: 'function',
    },
    {
        inputs: [
            { internalType: 'bytes', name: 'ecdsaPublicKey', type: 'bytes' },
            { internalType: 'bytes', name: 'blsPublicKey', type: 'bytes' },
            { internalType: 'bytes', name: 'blsPop', type: 'bytes' },
        ],
        name: 'registerValidator',
        outputs: [{ internalType: 'bool', name: '', type: 'bool' }],
        stateMutability: 'nonpayable',
        type: 'function',
    },
    {
        inputs: [{ internalType: 'bytes', name: 'ecdsaPublicKey', type: 'bytes' }],
        name: 'registerValidatorNoBls',
        outputs: [{ internalType: 'bool', name: '', type: 'bool' }],
        stateMutability: 'nonpayable',
        type: 'function',
    },
    {
        inputs: [{ internalType: 'uint256', name: 'index', type: 'uint256' }],
        name: 'deregisterValidator',
        outputs: [{ internalType: 'bool', name: '', type: 'bool' }],
        stateMutability: 'nonpayable',
        type: 'function',
    },
    {
        inputs: [{ internalType: 'address', name: 'group', type: 'address' }],
        name: 'affiliate',
        outputs: [{ internalType: 'bool', name: '', type: 'bool' }],
        stateMutability: 'nonpayable',
        type: 'function',
    },
    {
        inputs: [],
        name: 'deaffiliate',
        outputs: [{ internalType: 'bool', name: '', type: 'bool' }],
        stateMutability: 'nonpayable',
        type: 'function',
    },
    {
        inputs: [
            { internalType: 'bytes', name: 'blsPublicKey', type: 'bytes' },
            { internalType: 'bytes', name: 'blsPop', type: 'bytes' },
        ],
        name: 'updateBlsPublicKey',
        outputs: [{ internalType: 'bool', name: '', type: 'bool' }],
        stateMutability: 'nonpayable',
        type: 'function',
    },
    {
        inputs: [
            { internalType: 'address', name: 'account', type: 'address' },
            { internalType: 'address', name: 'signer', type: 'address' },
            { internalType: 'bytes', name: 'ecdsaPublicKey', type: 'bytes' },
        ],
        name: 'updateEcdsaPublicKey',
        outputs: [{ internalType: 'bool', name: '', type: 'bool' }],
        stateMutability: 'nonpayable',
        type: 'function',
    },
    {
        inputs: [{ internalType: 'uint256', name: 'index', type: 'uint256' }],
        name: 'deregisterValidatorGroup',
        outputs: [{ internalType: 'bool', name: '', type: 'bool' }],
        stateMutability: 'nonpayable',
        type: 'function',
    },
    {
        inputs: [
            { internalType: 'address', name: 'account', type: 'address' },
            { internalType: 'address', name: 'signer', type: 'address' },
            { internalType: 'bytes', name: 'ecdsaPublicKey', type: 'bytes' },
            { internalType: 'bytes', name: 'blsPublicKey', type: 'bytes' },
            { internalType: 'bytes', name: 'blsPop', type: 'bytes' },
        ],
        name: 'updatePublicKeys',
        outputs: [{ internalType: 'bool', name: '', type: 'bool' }],
        stateMutability: 'nonpayable',
        type: 'function',
    },
    {
        inputs: [{ internalType: 'uint256', name: 'commission', type: 'uint256' }],
        name: 'registerValidatorGroup',
        outputs: [{ internalType: 'bool', name: '', type: 'bool' }],
        stateMutability: 'nonpayable',
        type: 'function',
    },
    {
        inputs: [{ internalType: 'address', name: 'validator', type: 'address' }],
        name: 'addMember',
        outputs: [{ internalType: 'bool', name: '', type: 'bool' }],
        stateMutability: 'nonpayable',
        type: 'function',
    },
    {
        inputs: [
            { internalType: 'address', name: 'validator', type: 'address' },
            { internalType: 'address', name: 'lesser', type: 'address' },
            { internalType: 'address', name: 'greater', type: 'address' },
        ],
        name: 'addFirstMember',
        outputs: [{ internalType: 'bool', name: '', type: 'bool' }],
        stateMutability: 'nonpayable',
        type: 'function',
    },
    {
        inputs: [{ internalType: 'address', name: 'validator', type: 'address' }],
        name: 'removeMember',
        outputs: [{ internalType: 'bool', name: '', type: 'bool' }],
        stateMutability: 'nonpayable',
        type: 'function',
    },
    {
        inputs: [
            { internalType: 'address', name: 'validator', type: 'address' },
            { internalType: 'address', name: 'lesserMember', type: 'address' },
            { internalType: 'address', name: 'greaterMember', type: 'address' },
        ],
        name: 'reorderMember',
        outputs: [{ internalType: 'bool', name: '', type: 'bool' }],
        stateMutability: 'nonpayable',
        type: 'function',
    },
    {
        inputs: [{ internalType: 'uint256', name: 'commission', type: 'uint256' }],
        name: 'setNextCommissionUpdate',
        outputs: [],
        stateMutability: 'nonpayable',
        type: 'function',
    },
    {
        inputs: [],
        name: 'updateCommission',
        outputs: [],
        stateMutability: 'nonpayable',
        type: 'function',
    },
    {
        inputs: [{ internalType: 'address', name: 'validatorAccount', type: 'address' }],
        name: 'forceDeaffiliateIfValidator',
        outputs: [],
        stateMutability: 'nonpayable',
        type: 'function',
    },
    {
        inputs: [],
        name: 'resetSlashingMultiplier',
        outputs: [],
        stateMutability: 'nonpayable',
        type: 'function',
    },
    {
        inputs: [{ internalType: 'address', name: 'account', type: 'address' }],
        name: 'halveSlashingMultiplier',
        outputs: [],
        stateMutability: 'nonpayable',
        type: 'function',
    },
    {
        inputs: [{ internalType: 'uint256', name: 'amount', type: 'uint256' }],
        name: 'mintStableToEpochManager',
        outputs: [],
        stateMutability: 'nonpayable',
        type: 'function',
    },
    {
        inputs: [{ internalType: 'address', name: 'signer', type: 'address' }],
        name: 'getValidatorBlsPublicKeyFromSigner',
        outputs: [{ internalType: 'bytes', name: 'blsPublicKey', type: 'bytes' }],
        stateMutability: 'view',
        type: 'function',
    },
    {
        inputs: [],
        name: 'getMembershipHistoryLength',
        outputs: [{ internalType: 'uint256', name: '', type: 'uint256' }],
        stateMutability: 'view',
        type: 'function',
    },
    {
        inputs: [{ internalType: 'address', name: 'account', type: 'address' }],
        name: 'getValidatorGroup',
        outputs: [
            { internalType: 'address[]', name: '', type: 'address[]' },
            { internalType: 'uint256', name: '', type: 'uint256' },
            { internalType: 'uint256', name: '', type: 'uint256' },
            { internalType: 'uint256', name: '', type: 'uint256' },
            { internalType: 'uint256[]', name: '', type: 'uint256[]' },
            { internalType: 'uint256', name: '', type: 'uint256' },
            { internalType: 'uint256', name: '', type: 'uint256' },
        ],
        stateMutability: 'view',
        type: 'function',
    },
    {
        inputs: [
            { internalType: 'address', name: 'account', type: 'address' },
            { internalType: 'uint256', name: 'n', type: 'uint256' },
        ],
        name: 'getTopGroupValidators',
        outputs: [{ internalType: 'address[]', name: '', type: 'address[]' }],
        stateMutability: 'view',
        type: 'function',
    },
    {
        inputs: [
            { internalType: 'address', name: 'account', type: 'address' },
            { internalType: 'uint256', name: 'n', type: 'uint256' },
        ],
        name: 'getTopGroupValidatorsAccounts',
        outputs: [{ internalType: 'address[]', name: '', type: 'address[]' }],
        stateMutability: 'view',
        type: 'function',
    },
    {
        inputs: [{ internalType: 'address[]', name: 'accounts', type: 'address[]' }],
        name: 'getGroupsNumMembers',
        outputs: [{ internalType: 'uint256[]', name: '', type: 'uint256[]' }],
        stateMutability: 'view',
        type: 'function',
    },
    {
        inputs: [],
        name: 'getNumRegisteredValidators',
        outputs: [{ internalType: 'uint256', name: '', type: 'uint256' }],
        stateMutability: 'view',
        type: 'function',
    },
    {
        inputs: [],
        name: 'getValidatorLockedGoldRequirements',
        outputs: [
            { internalType: 'uint256', name: '', type: 'uint256' },
            { internalType: 'uint256', name: '', type: 'uint256' },
        ],
        stateMutability: 'view',
        type: 'function',
    },
    {
        inputs: [],
        name: 'getGroupLockedGoldRequirements',
        outputs: [
            { internalType: 'uint256', name: '', type: 'uint256' },
            { internalType: 'uint256', name: '', type: 'uint256' },
        ],
        stateMutability: 'view',
        type: 'function',
    },
    {
        inputs: [],
        name: 'getRegisteredValidatorSigners',
        outputs: [{ internalType: 'address[]', name: '', type: 'address[]' }],
        stateMutability: 'view',
        type: 'function',
    },
    {
        inputs: [],
        name: 'getRegisteredValidators',
        outputs: [{ internalType: 'address[]', name: '', type: 'address[]' }],
        stateMutability: 'view',
        type: 'function',
    },
    {
        inputs: [],
        name: 'getRegisteredValidatorGroups',
        outputs: [{ internalType: 'address[]', name: '', type: 'address[]' }],
        stateMutability: 'view',
        type: 'function',
    },
    {
        inputs: [{ internalType: 'address', name: 'signer', type: 'address' }],
        name: 'getMembershipInLastEpochFromSigner',
        outputs: [{ internalType: 'address', name: '', type: 'address' }],
        stateMutability: 'view',
        type: 'function',
    },
    {
        inputs: [{ internalType: 'address', name: 'account', type: 'address' }],
        name: 'getValidatorGroupSlashingMultiplier',
        outputs: [{ internalType: 'uint256', name: '', type: 'uint256' }],
        stateMutability: 'view',
        type: 'function',
    },
    {
        inputs: [
            { internalType: 'address', name: 'account', type: 'address' },
            { internalType: 'uint256', name: 'epochNumber', type: 'uint256' },
            { internalType: 'uint256', name: 'index', type: 'uint256' },
        ],
        name: 'groupMembershipInEpoch',
        outputs: [{ internalType: 'address', name: '', type: 'address' }],
        stateMutability: 'view',
        type: 'function',
    },
    {
        inputs: [],
        name: 'getValidatorScoreParameters',
        outputs: [
            { internalType: 'uint256', name: '', type: 'uint256' },
            { internalType: 'uint256', name: '', type: 'uint256' },
        ],
        stateMutability: 'view',
        type: 'function',
    },
    {
        inputs: [{ internalType: 'address', name: 'account', type: 'address' }],
        name: 'getMembershipHistory',
        outputs: [
            { internalType: 'uint256[]', name: '', type: 'uint256[]' },
            { internalType: 'address[]', name: '', type: 'address[]' },
            { internalType: 'uint256', name: '', type: 'uint256' },
            { internalType: 'uint256', name: '', type: 'uint256' },
        ],
        stateMutability: 'view',
        type: 'function',
    },
    {
        inputs: [{ internalType: 'uint256[]', name: 'uptimes', type: 'uint256[]' }],
        name: 'calculateGroupEpochScore',
        outputs: [{ internalType: 'uint256', name: '', type: 'uint256' }],
        stateMutability: 'view',
        type: 'function',
    },
    {
        inputs: [],
        name: 'getMaxGroupSize',
        outputs: [{ internalType: 'uint256', name: '', type: 'uint256' }],
        stateMutability: 'view',
        type: 'function',
    },
    {
        inputs: [],
        name: 'getCommissionUpdateDelay',
        outputs: [{ internalType: 'uint256', name: '', type: 'uint256' }],
        stateMutability: 'view',
        type: 'function',
    },
    {
        inputs: [
            { internalType: 'address', name: 'account', type: 'address' },
            { internalType: 'uint256', name: 'score', type: 'uint256' },
            { internalType: 'uint256', name: 'maxPayment', type: 'uint256' },
        ],
        name: 'computeEpochReward',
        outputs: [{ internalType: 'uint256', name: '', type: 'uint256' }],
        stateMutability: 'view',
        type: 'function',
    },
    {
        inputs: [],
        name: 'getVersionNumber',
        outputs: [
            { internalType: 'uint256', name: '', type: 'uint256' },
            { internalType: 'uint256', name: '', type: 'uint256' },
            { internalType: 'uint256', name: '', type: 'uint256' },
            { internalType: 'uint256', name: '', type: 'uint256' },
        ],
        stateMutability: 'pure',
        type: 'function',
    },
    {
        inputs: [{ internalType: 'uint256', name: 'delay', type: 'uint256' }],
        name: 'setCommissionUpdateDelay',
        outputs: [],
        stateMutability: 'nonpayable',
        type: 'function',
    },
    {
        inputs: [{ internalType: 'uint256', name: 'size', type: 'uint256' }],
        name: 'setMaxGroupSize',
        outputs: [{ internalType: 'bool', name: '', type: 'bool' }],
        stateMutability: 'nonpayable',
        type: 'function',
    },
    {
        inputs: [{ internalType: 'uint256', name: 'length', type: 'uint256' }],
        name: 'setMembershipHistoryLength',
        outputs: [{ internalType: 'bool', name: '', type: 'bool' }],
        stateMutability: 'nonpayable',
        type: 'function',
    },
    {
        inputs: [
            { internalType: 'uint256', name: 'exponent', type: 'uint256' },
            { internalType: 'uint256', name: 'adjustmentSpeed', type: 'uint256' },
        ],
        name: 'setValidatorScoreParameters',
        outputs: [{ internalType: 'bool', name: '', type: 'bool' }],
        stateMutability: 'nonpayable',
        type: 'function',
    },
    {
        inputs: [
            { internalType: 'uint256', name: 'value', type: 'uint256' },
            { internalType: 'uint256', name: 'duration', type: 'uint256' },
        ],
        name: 'setGroupLockedGoldRequirements',
        outputs: [{ internalType: 'bool', name: '', type: 'bool' }],
        stateMutability: 'nonpayable',
        type: 'function',
    },
    {
        inputs: [
            { internalType: 'uint256', name: 'value', type: 'uint256' },
            { internalType: 'uint256', name: 'duration', type: 'uint256' },
        ],
        name: 'setValidatorLockedGoldRequirements',
        outputs: [{ internalType: 'bool', name: '', type: 'bool' }],
        stateMutability: 'nonpayable',
        type: 'function',
    },
    {
        inputs: [{ internalType: 'uint256', name: 'value', type: 'uint256' }],
        name: 'setSlashingMultiplierResetPeriod',
        outputs: [],
        stateMutability: 'nonpayable',
        type: 'function',
    },
    {
        inputs: [{ internalType: 'uint256', name: 'value', type: 'uint256' }],
        name: 'setDowntimeGracePeriod',
        outputs: [],
        stateMutability: 'nonpayable',
        type: 'function',
    },
    {
        inputs: [{ internalType: 'address', name: 'account', type: 'address' }],
        name: 'getAccountLockedGoldRequirement',
        outputs: [{ internalType: 'uint256', name: '', type: 'uint256' }],
        stateMutability: 'view',
        type: 'function',
    },
    {
        inputs: [{ internalType: 'address', name: 'account', type: 'address' }],
        name: 'getMembershipInLastEpoch',
        outputs: [{ internalType: 'address', name: '', type: 'address' }],
        stateMutability: 'view',
        type: 'function',
    },
    {
        inputs: [{ internalType: 'uint256', name: 'uptime', type: 'uint256' }],
        name: 'calculateEpochScore',
        outputs: [{ internalType: 'uint256', name: '', type: 'uint256' }],
        stateMutability: 'view',
        type: 'function',
    },
    {
        inputs: [{ internalType: 'address', name: 'account', type: 'address' }],
        name: 'meetsAccountLockedGoldRequirements',
        outputs: [{ internalType: 'bool', name: '', type: 'bool' }],
        stateMutability: 'view',
        type: 'function',
    },
    {
        inputs: [{ internalType: 'address', name: 'account', type: 'address' }],
        name: 'getValidator',
        outputs: [
            { internalType: 'bytes', name: 'ecdsaPublicKey', type: 'bytes' },
            { internalType: 'bytes', name: 'blsPublicKey', type: 'bytes' },
            { internalType: 'address', name: 'affiliation', type: 'address' },
            { internalType: 'uint256', name: 'score', type: 'uint256' },
            { internalType: 'address', name: 'signer', type: 'address' },
        ],
        stateMutability: 'view',
        type: 'function',
    },
    {
        inputs: [{ internalType: 'address', name: 'account', type: 'address' }],
        name: 'getValidatorsGroup',
        outputs: [{ internalType: 'address', name: 'group', type: 'address' }],
        stateMutability: 'view',
        type: 'function',
    },
    {
        inputs: [{ internalType: 'address', name: 'account', type: 'address' }],
        name: 'getGroupNumMembers',
        outputs: [{ internalType: 'uint256', name: '', type: 'uint256' }],
        stateMutability: 'view',
        type: 'function',
    },
    {
        inputs: [{ internalType: 'address', name: 'account', type: 'address' }],
        name: 'isValidatorGroup',
        outputs: [{ internalType: 'bool', name: '', type: 'bool' }],
        stateMutability: 'view',
        type: 'function',
    },
    {
        inputs: [{ internalType: 'address', name: 'account', type: 'address' }],
        name: 'isValidator',
        outputs: [{ internalType: 'bool', name: '', type: 'bool' }],
        stateMutability: 'view',
        type: 'function',
    },
];
export function newValidators(web3, address) {
    return new web3.eth.Contract(ABI, address);
}
