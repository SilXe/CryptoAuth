{"ast":null,"code":"import axios from 'axios';\nimport { ethers } from 'ethers';\nconst API_KEY = process.env.REACT_APP_PINATA_API_KEY;\nconst API_SECRET = process.env.REACT_APP_PINATA_SECRET;\nexport const uploadToPinata = async ({\n  name,\n  email\n}) => {\n  try {\n    const hashedName = ethers.keccak256(ethers.toUtf8Bytes(name));\n    const hashedEmail = ethers.keccak256(ethers.toUtf8Bytes(email));\n    const metadata = {\n      name: 'CryptoAuth NFT',\n      description: 'Identity-bound access NFT',\n      attributes: [{\n        trait_type: 'Hashed Name',\n        value: hashedName\n      }, {\n        trait_type: 'Hashed Email',\n        value: hashedEmail\n      }, {\n        trait_type: 'Role',\n        value: 'Member'\n      }]\n    };\n    const res = await axios.post('https://api.pinata.cloud/pinning/pinJSONToIPFS', metadata, {\n      headers: {\n        'Content-Type': 'application/json',\n        pinata_api_key: API_KEY,\n        pinata_secret_api_key: API_SECRET\n      }\n    });\n    const cid = res.data.IpfsHash;\n    return `https://gateway.pinata.cloud/ipfs/${cid}`;\n  } catch (err) {\n    console.error('❌ Failed to upload to Pinata:', err);\n    throw err;\n  }\n};","map":{"version":3,"names":["axios","ethers","API_KEY","process","env","REACT_APP_PINATA_API_KEY","API_SECRET","REACT_APP_PINATA_SECRET","uploadToPinata","name","email","hashedName","keccak256","toUtf8Bytes","hashedEmail","metadata","description","attributes","trait_type","value","res","post","headers","pinata_api_key","pinata_secret_api_key","cid","data","IpfsHash","err","console","error"],"sources":["C:/nft_auth_app/frontend/src/lib/pinataUploader.js"],"sourcesContent":["import axios from 'axios';\r\nimport { ethers } from 'ethers';\r\n\r\nconst API_KEY = process.env.REACT_APP_PINATA_API_KEY;\r\nconst API_SECRET = process.env.REACT_APP_PINATA_SECRET;\r\n\r\nexport const uploadToPinata = async ({ name, email }) => {\r\n  try {\r\n    const hashedName = ethers.keccak256(ethers.toUtf8Bytes(name));\r\n    const hashedEmail = ethers.keccak256(ethers.toUtf8Bytes(email));\r\n\r\n    const metadata = {\r\n      name: 'CryptoAuth NFT',\r\n      description: 'Identity-bound access NFT',\r\n      attributes: [\r\n        { trait_type: 'Hashed Name', value: hashedName },\r\n        { trait_type: 'Hashed Email', value: hashedEmail },\r\n        { trait_type: 'Role', value: 'Member' }\r\n      ]\r\n    };\r\n\r\n    const res = await axios.post(\r\n      'https://api.pinata.cloud/pinning/pinJSONToIPFS',\r\n      metadata,\r\n      {\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n          pinata_api_key: API_KEY,\r\n          pinata_secret_api_key: API_SECRET\r\n        }\r\n      }\r\n    );\r\n\r\n    const cid = res.data.IpfsHash;\r\n    return `https://gateway.pinata.cloud/ipfs/${cid}`;\r\n  } catch (err) {\r\n    console.error('❌ Failed to upload to Pinata:', err);\r\n    throw err;\r\n  }\r\n};\r\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,MAAM,QAAQ,QAAQ;AAE/B,MAAMC,OAAO,GAAGC,OAAO,CAACC,GAAG,CAACC,wBAAwB;AACpD,MAAMC,UAAU,GAAGH,OAAO,CAACC,GAAG,CAACG,uBAAuB;AAEtD,OAAO,MAAMC,cAAc,GAAG,MAAAA,CAAO;EAAEC,IAAI;EAAEC;AAAM,CAAC,KAAK;EACvD,IAAI;IACF,MAAMC,UAAU,GAAGV,MAAM,CAACW,SAAS,CAACX,MAAM,CAACY,WAAW,CAACJ,IAAI,CAAC,CAAC;IAC7D,MAAMK,WAAW,GAAGb,MAAM,CAACW,SAAS,CAACX,MAAM,CAACY,WAAW,CAACH,KAAK,CAAC,CAAC;IAE/D,MAAMK,QAAQ,GAAG;MACfN,IAAI,EAAE,gBAAgB;MACtBO,WAAW,EAAE,2BAA2B;MACxCC,UAAU,EAAE,CACV;QAAEC,UAAU,EAAE,aAAa;QAAEC,KAAK,EAAER;MAAW,CAAC,EAChD;QAAEO,UAAU,EAAE,cAAc;QAAEC,KAAK,EAAEL;MAAY,CAAC,EAClD;QAAEI,UAAU,EAAE,MAAM;QAAEC,KAAK,EAAE;MAAS,CAAC;IAE3C,CAAC;IAED,MAAMC,GAAG,GAAG,MAAMpB,KAAK,CAACqB,IAAI,CAC1B,gDAAgD,EAChDN,QAAQ,EACR;MACEO,OAAO,EAAE;QACP,cAAc,EAAE,kBAAkB;QAClCC,cAAc,EAAErB,OAAO;QACvBsB,qBAAqB,EAAElB;MACzB;IACF,CACF,CAAC;IAED,MAAMmB,GAAG,GAAGL,GAAG,CAACM,IAAI,CAACC,QAAQ;IAC7B,OAAO,qCAAqCF,GAAG,EAAE;EACnD,CAAC,CAAC,OAAOG,GAAG,EAAE;IACZC,OAAO,CAACC,KAAK,CAAC,+BAA+B,EAAEF,GAAG,CAAC;IACnD,MAAMA,GAAG;EACX;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}