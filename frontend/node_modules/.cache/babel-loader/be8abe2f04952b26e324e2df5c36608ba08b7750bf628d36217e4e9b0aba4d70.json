{"ast":null,"code":"const handleCoinbaseLogin = async () => {\n  try {\n    const APP_NAME = 'CryptoAuth';\n    const CHAIN_ID = 1;\n    const RPC_URL = 'https://mainnet.infura.io/v3/151ac0015300430ca8ec9b62f8002589'; // Replace with real ID\n\n    if (!RPC_URL || !CHAIN_ID) {\n      throw new Error('Missing RPC_URL or CHAIN_ID');\n    }\n    const coinbaseWallet = new CoinbaseWalletSDK({\n      appName: APP_NAME,\n      darkMode: false\n    });\n    const ethereum = coinbaseWallet.makeWeb3Provider(RPC_URL, CHAIN_ID);\n    if (!ethereum) {\n      throw new Error('Failed to initialize Coinbase provider.');\n    }\n    const provider = new BrowserProvider(ethereum);\n    const accounts = await provider.send('eth_requestAccounts', []);\n    if (!accounts || !accounts.length) {\n      throw new Error('No accounts returned from wallet.');\n    }\n    const address = accounts[0];\n    alert(`üü¢ Connected Wallet:\\n${address}`);\n  } catch (error) {\n    console.error('‚ùå Wallet connection error:', error);\n    alert('Failed to connect. Check console for error.');\n  }\n};","map":{"version":3,"names":["handleCoinbaseLogin","APP_NAME","CHAIN_ID","RPC_URL","Error","coinbaseWallet","CoinbaseWalletSDK","appName","darkMode","ethereum","makeWeb3Provider","provider","BrowserProvider","accounts","send","length","address","alert","error","console"],"sources":["C:/nft_auth_app/frontend/src/pages/LoginPage.jsx"],"sourcesContent":["const handleCoinbaseLogin = async () => {\r\n  try {\r\n    const APP_NAME = 'CryptoAuth';\r\n    const CHAIN_ID = 1;\r\n    const RPC_URL = 'https://mainnet.infura.io/v3/151ac0015300430ca8ec9b62f8002589'; // Replace with real ID\r\n\r\n    if (!RPC_URL || !CHAIN_ID) {\r\n      throw new Error('Missing RPC_URL or CHAIN_ID');\r\n    }\r\n\r\n    const coinbaseWallet = new CoinbaseWalletSDK({\r\n      appName: APP_NAME,\r\n      darkMode: false,\r\n    });\r\n\r\n    const ethereum = coinbaseWallet.makeWeb3Provider(RPC_URL, CHAIN_ID);\r\n\r\n    if (!ethereum) {\r\n      throw new Error('Failed to initialize Coinbase provider.');\r\n    }\r\n\r\n    const provider = new BrowserProvider(ethereum);\r\n    const accounts = await provider.send('eth_requestAccounts', []);\r\n\r\n    if (!accounts || !accounts.length) {\r\n      throw new Error('No accounts returned from wallet.');\r\n    }\r\n\r\n    const address = accounts[0];\r\n    alert(`üü¢ Connected Wallet:\\n${address}`);\r\n  } catch (error) {\r\n    console.error('‚ùå Wallet connection error:', error);\r\n    alert('Failed to connect. Check console for error.');\r\n  }\r\n};"],"mappings":"AAAA,MAAMA,mBAAmB,GAAG,MAAAA,CAAA,KAAY;EACtC,IAAI;IACF,MAAMC,QAAQ,GAAG,YAAY;IAC7B,MAAMC,QAAQ,GAAG,CAAC;IAClB,MAAMC,OAAO,GAAG,+DAA+D,CAAC,CAAC;;IAEjF,IAAI,CAACA,OAAO,IAAI,CAACD,QAAQ,EAAE;MACzB,MAAM,IAAIE,KAAK,CAAC,6BAA6B,CAAC;IAChD;IAEA,MAAMC,cAAc,GAAG,IAAIC,iBAAiB,CAAC;MAC3CC,OAAO,EAAEN,QAAQ;MACjBO,QAAQ,EAAE;IACZ,CAAC,CAAC;IAEF,MAAMC,QAAQ,GAAGJ,cAAc,CAACK,gBAAgB,CAACP,OAAO,EAAED,QAAQ,CAAC;IAEnE,IAAI,CAACO,QAAQ,EAAE;MACb,MAAM,IAAIL,KAAK,CAAC,yCAAyC,CAAC;IAC5D;IAEA,MAAMO,QAAQ,GAAG,IAAIC,eAAe,CAACH,QAAQ,CAAC;IAC9C,MAAMI,QAAQ,GAAG,MAAMF,QAAQ,CAACG,IAAI,CAAC,qBAAqB,EAAE,EAAE,CAAC;IAE/D,IAAI,CAACD,QAAQ,IAAI,CAACA,QAAQ,CAACE,MAAM,EAAE;MACjC,MAAM,IAAIX,KAAK,CAAC,mCAAmC,CAAC;IACtD;IAEA,MAAMY,OAAO,GAAGH,QAAQ,CAAC,CAAC,CAAC;IAC3BI,KAAK,CAAC,yBAAyBD,OAAO,EAAE,CAAC;EAC3C,CAAC,CAAC,OAAOE,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,4BAA4B,EAAEA,KAAK,CAAC;IAClDD,KAAK,CAAC,6CAA6C,CAAC;EACtD;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}