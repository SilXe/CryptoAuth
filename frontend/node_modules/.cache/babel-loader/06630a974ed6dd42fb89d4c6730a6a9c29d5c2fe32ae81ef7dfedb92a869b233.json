{"ast":null,"code":"var _jsxFileName = \"C:\\\\nft_auth_app\\\\frontend\\\\src\\\\pages\\\\LoginPage.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { useAuth } from '../contexts/AuthContext';\nimport { CoinbaseWalletSDK } from '@coinbase/wallet-sdk';\nimport { BrowserProvider } from 'ethers';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst LoginPage = () => {\n  _s();\n  const [isConnecting, setIsConnecting] = useState(false);\n  const {\n    user,\n    login,\n    logout,\n    isAuthenticated\n  } = useAuth();\n  const navigate = useNavigate();\n  const handleGoToLanding = () => {\n    navigate('/');\n  };\n  const handleConnect = async () => {\n    try {\n      setIsConnecting(true);\n      const APP_NAME = 'CryptoAuth';\n      const RPC_URL = 'https://mainnet.infura.io/v3/151ac0015300430ca8ec9b62f8002589'; // Your Infura URL\n      const CHAIN_ID = 1;\n      const coinbaseWallet = new CoinbaseWalletSDK({\n        appName: APP_NAME,\n        darkMode: false,\n        theme: 'light',\n        appChainId: CHAIN_ID\n      });\n      const ethereum = coinbaseWallet.makeWeb3Provider(RPC_URL, CHAIN_ID);\n      const provider = new BrowserProvider(ethereum);\n      const accounts = await provider.send('eth_requestAccounts', []);\n      const address = accounts[0];\n\n      // Set the logged-in user\n      login(address);\n\n      // Navigate to Dashboard automatically\n      // navigate('/dashboard'); ** Now needs to wait for the nft check **\n    } catch (error) {\n      console.error('❌ Wallet connection error:', error);\n      alert('Failed to connect wallet. Check console for error.');\n    } finally {\n      setIsConnecting(false);\n    }\n  };\n  const handleMetaMaskLogin = async () => {\n    try {\n      var _window$ethereum, _window$ethereum2;\n      let ethereum;\n\n      // Use MetaMask explicitly if multiple providers are injected\n      if ((_window$ethereum = window.ethereum) !== null && _window$ethereum !== void 0 && _window$ethereum.providers) {\n        ethereum = window.ethereum.providers.find(p => p.isMetaMask);\n      } else if ((_window$ethereum2 = window.ethereum) !== null && _window$ethereum2 !== void 0 && _window$ethereum2.isMetaMask) {\n        ethereum = window.ethereum;\n      } else {\n        alert('MetaMask is not available.');\n        return;\n      }\n      const accounts = await ethereum.request({\n        method: 'eth_requestAccounts'\n      });\n      const address = accounts[0];\n      login({\n        address,\n        role: 'Member'\n      });\n      navigate('/dashboard');\n    } catch (error) {\n      console.error('❌ MetaMask connection error:', error);\n      alert('Failed to connect MetaMask. Check console for error.');\n    }\n  };\n  const handleLogout = () => {\n    logout();\n    navigate('/'); // Redirect to Landing page\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      minHeight: '100vh',\n      display: 'flex',\n      flexDirection: 'column'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        textAlign: 'center',\n        padding: '2rem 1rem 0.5rem'\n      },\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleGoToLanding,\n        style: {\n          background: 'none',\n          border: 'none',\n          fontSize: '2rem',\n          fontWeight: 'bold',\n          cursor: 'pointer',\n          color: '#4f46e5'\n        },\n        children: \"CryptoAuth\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        flexGrow: 1,\n        display: 'flex',\n        justifyContent: 'center',\n        alignItems: 'flex-start',\n        paddingTop: '1rem'\n      },\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          textAlign: 'center'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: isAuthenticated ? `Welcome, ${user}` : 'Login'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            display: 'flex',\n            flexDirection: 'column',\n            alignItems: 'center'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: isAuthenticated ? handleLogout : handleConnect,\n            style: {\n              padding: '0.75rem 1.5rem',\n              backgroundColor: '#4f46e5',\n              color: 'white',\n              fontSize: '1rem',\n              border: 'none',\n              borderRadius: '8px',\n              cursor: 'pointer',\n              marginBottom: '1.5rem' // spacing between the two buttons\n            },\n            children: isAuthenticated ? 'Log Out' : isConnecting ? 'Connecting...' : 'Connect Coinbase Wallet'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 13\n          }, this), !isAuthenticated && /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleMetaMaskLogin,\n            style: {\n              padding: '0.75rem 1.5rem',\n              backgroundColor: '#f6851b',\n              color: 'white',\n              fontSize: '1rem',\n              border: 'none',\n              borderRadius: '8px',\n              cursor: 'pointer'\n            },\n            children: \"Connect to MetaMask\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 123,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 79,\n    columnNumber: 5\n  }, this);\n};\n_s(LoginPage, \"qbkkYu1WfIup05yKCmMwsD3G8T0=\", false, function () {\n  return [useAuth, useNavigate];\n});\n_c = LoginPage;\nexport default LoginPage;\nvar _c;\n$RefreshReg$(_c, \"LoginPage\");","map":{"version":3,"names":["React","useState","useEffect","useNavigate","useAuth","CoinbaseWalletSDK","BrowserProvider","jsxDEV","_jsxDEV","LoginPage","_s","isConnecting","setIsConnecting","user","login","logout","isAuthenticated","navigate","handleGoToLanding","handleConnect","APP_NAME","RPC_URL","CHAIN_ID","coinbaseWallet","appName","darkMode","theme","appChainId","ethereum","makeWeb3Provider","provider","accounts","send","address","error","console","alert","handleMetaMaskLogin","_window$ethereum","_window$ethereum2","window","providers","find","p","isMetaMask","request","method","role","handleLogout","style","minHeight","display","flexDirection","children","textAlign","padding","onClick","background","border","fontSize","fontWeight","cursor","color","fileName","_jsxFileName","lineNumber","columnNumber","flexGrow","justifyContent","alignItems","paddingTop","backgroundColor","borderRadius","marginBottom","_c","$RefreshReg$"],"sources":["C:/nft_auth_app/frontend/src/pages/LoginPage.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { useAuth } from '../contexts/AuthContext';\r\nimport { CoinbaseWalletSDK } from '@coinbase/wallet-sdk';\r\nimport { BrowserProvider } from 'ethers';\r\n\r\nconst LoginPage = () => {\r\n  const [isConnecting, setIsConnecting] = useState(false);\r\n  const { user, login, logout, isAuthenticated } = useAuth();\r\n  const navigate = useNavigate();\r\n\r\n  const handleGoToLanding = () => {\r\n    navigate('/');\r\n  };\r\n\r\n  const handleConnect = async () => {\r\n    try {\r\n      setIsConnecting(true);\r\n      const APP_NAME = 'CryptoAuth';\r\n      const RPC_URL = 'https://mainnet.infura.io/v3/151ac0015300430ca8ec9b62f8002589'; // Your Infura URL\r\n      const CHAIN_ID = 1;\r\n\r\n      const coinbaseWallet = new CoinbaseWalletSDK({\r\n        appName: APP_NAME,\r\n        darkMode: false,\r\n        theme: 'light',\r\n        appChainId: CHAIN_ID,\r\n      });\r\n\r\n      const ethereum = coinbaseWallet.makeWeb3Provider(RPC_URL, CHAIN_ID);\r\n      const provider = new BrowserProvider(ethereum);\r\n      const accounts = await provider.send('eth_requestAccounts', []);\r\n      const address = accounts[0];\r\n\r\n      // Set the logged-in user\r\n      login(address);\r\n\r\n      // Navigate to Dashboard automatically\r\n      // navigate('/dashboard'); ** Now needs to wait for the nft check **\r\n    } catch (error) {\r\n      console.error('❌ Wallet connection error:', error);\r\n      alert('Failed to connect wallet. Check console for error.');\r\n    } finally {\r\n      setIsConnecting(false);\r\n    }\r\n  };\r\n\r\n  const handleMetaMaskLogin = async () => {\r\n    try {\r\n      let ethereum;\r\n  \r\n      // Use MetaMask explicitly if multiple providers are injected\r\n      if (window.ethereum?.providers) {\r\n        ethereum = window.ethereum.providers.find((p) => p.isMetaMask);\r\n      } else if (window.ethereum?.isMetaMask) {\r\n        ethereum = window.ethereum;\r\n      } else {\r\n        alert('MetaMask is not available.');\r\n        return;\r\n      }\r\n  \r\n      const accounts = await ethereum.request({ method: 'eth_requestAccounts' });\r\n      const address = accounts[0];\r\n  \r\n      login({ address, role: 'Member' });\r\n      navigate('/dashboard');\r\n    } catch (error) {\r\n      console.error('❌ MetaMask connection error:', error);\r\n      alert('Failed to connect MetaMask. Check console for error.');\r\n    }\r\n  };\r\n\r\n  const handleLogout = () => {\r\n    logout();\r\n    navigate('/');  // Redirect to Landing page\r\n  };\r\n\r\n  return (\r\n    <div style={{ minHeight: '100vh', display: 'flex', flexDirection: 'column' }}>\r\n      {/* Top Center: CryptoAuth Logo/Button */}\r\n      <div style={{ textAlign: 'center', padding: '2rem 1rem 0.5rem' }}>\r\n        <button\r\n          onClick={handleGoToLanding}\r\n          style={{\r\n            background: 'none',\r\n            border: 'none',\r\n            fontSize: '2rem',\r\n            fontWeight: 'bold',\r\n            cursor: 'pointer',\r\n            color: '#4f46e5',\r\n          }}\r\n        >\r\n          CryptoAuth\r\n        </button>\r\n      </div>\r\n\r\n      {/* Center Section: Login Buttons */}\r\n      <div style={{ flexGrow: 1, display: 'flex', justifyContent: 'center', alignItems: 'flex-start', paddingTop: '1rem' }}>\r\n        <div style={{ textAlign: 'center' }}>\r\n          <h2>{isAuthenticated ? `Welcome, ${user}` : 'Login'}</h2>\r\n\r\n          {/* Group Coinbase and MetaMask buttons in a vertical stack */}\r\n          <div style={{ display: 'flex', flexDirection: 'column', alignItems: 'center' }}>\r\n            {/* 🔵 Coinbase Wallet */}\r\n            <button\r\n              onClick={isAuthenticated ? handleLogout : handleConnect}\r\n              style={{\r\n                padding: '0.75rem 1.5rem',\r\n                backgroundColor: '#4f46e5',\r\n                color: 'white',\r\n                fontSize: '1rem',\r\n                border: 'none',\r\n                borderRadius: '8px',\r\n                cursor: 'pointer',\r\n                marginBottom: '1.5rem', // spacing between the two buttons\r\n              }}\r\n            >\r\n              {isAuthenticated ? 'Log Out' : isConnecting ? 'Connecting...' : 'Connect Coinbase Wallet'}\r\n            </button>\r\n\r\n            {/* 🟠 MetaMask Wallet */}\r\n            {!isAuthenticated && (\r\n              <button\r\n                onClick={handleMetaMaskLogin}\r\n                style={{\r\n                  padding: '0.75rem 1.5rem',\r\n                  backgroundColor: '#f6851b',\r\n                  color: 'white',\r\n                  fontSize: '1rem',\r\n                  border: 'none',\r\n                  borderRadius: '8px',\r\n                  cursor: 'pointer',\r\n                }}\r\n              >\r\n                Connect to MetaMask\r\n              </button>\r\n            )}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LoginPage;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}