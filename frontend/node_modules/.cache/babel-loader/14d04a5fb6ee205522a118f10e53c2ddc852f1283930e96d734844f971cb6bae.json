{"ast":null,"code":"var _jsxFileName = \"C:\\\\nft_auth_app\\\\frontend\\\\src\\\\pages\\\\LoginPage.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { useAuth } from '../contexts/AuthContext';\nimport { CoinbaseWalletSDK } from '@coinbase/wallet-sdk';\nimport { BrowserProvider } from 'ethers';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst LoginPage = () => {\n  _s();\n  const [isConnecting, setIsConnecting] = useState(false);\n  const {\n    user,\n    login,\n    logout,\n    isAuthenticated\n  } = useAuth();\n  const navigate = useNavigate();\n  const handleGoToLanding = () => {\n    navigate('/');\n  };\n  const handleConnect = async () => {\n    try {\n      setIsConnecting(true);\n      const APP_NAME = 'CryptoAuth';\n      const RPC_URL = 'https://mainnet.infura.io/v3/151ac0015300430ca8ec9b62f8002589'; // Your Infura URL\n      const CHAIN_ID = 1;\n      const coinbaseWallet = new CoinbaseWalletSDK({\n        appName: APP_NAME,\n        darkMode: false,\n        theme: 'light',\n        appChainId: CHAIN_ID\n      });\n      const ethereum = coinbaseWallet.makeWeb3Provider(RPC_URL, CHAIN_ID);\n      const provider = new BrowserProvider(ethereum);\n      const accounts = await provider.send('eth_requestAccounts', []);\n      const address = accounts[0];\n\n      // Set the logged-in user\n      login(address);\n\n      // Navigate to Dashboard automatically\n      navigate('/dashboard');\n    } catch (error) {\n      console.error('❌ Wallet connection error:', error);\n      alert('Failed to connect wallet. Check console for error.');\n    } finally {\n      setIsConnecting(false);\n    }\n  };\n  const handleLogout = () => {\n    logout();\n    navigate('/'); // Redirect to Landing page\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      padding: '2rem',\n      textAlign: 'center'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: isAuthenticated ? `Welcome, ${user}` : 'Login'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleGoToLanding,\n      style: {\n        background: 'none',\n        border: 'none',\n        fontSize: '1.5rem',\n        fontWeight: 'bold',\n        cursor: 'pointer',\n        color: '#4f46e5',\n        marginBottom: '2rem'\n      },\n      children: \"CryptoAuth\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: isAuthenticated ? handleLogout : handleConnect,\n      style: {\n        padding: '0.75rem 1.5rem',\n        backgroundColor: '#4f46e5',\n        color: 'white',\n        fontSize: '1rem',\n        border: 'none',\n        borderRadius: '8px',\n        cursor: 'pointer'\n      },\n      children: isAuthenticated ? 'Log Out' : isConnecting ? 'Connecting...' : 'Connect Coinbase Wallet'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 5\n  }, this);\n};\n_s(LoginPage, \"qbkkYu1WfIup05yKCmMwsD3G8T0=\", false, function () {\n  return [useAuth, useNavigate];\n});\n_c = LoginPage;\nexport default LoginPage;\nvar _c;\n$RefreshReg$(_c, \"LoginPage\");","map":{"version":3,"names":["React","useState","useEffect","useNavigate","useAuth","CoinbaseWalletSDK","BrowserProvider","jsxDEV","_jsxDEV","LoginPage","_s","isConnecting","setIsConnecting","user","login","logout","isAuthenticated","navigate","handleGoToLanding","handleConnect","APP_NAME","RPC_URL","CHAIN_ID","coinbaseWallet","appName","darkMode","theme","appChainId","ethereum","makeWeb3Provider","provider","accounts","send","address","error","console","alert","handleLogout","style","padding","textAlign","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","background","border","fontSize","fontWeight","cursor","color","marginBottom","backgroundColor","borderRadius","_c","$RefreshReg$"],"sources":["C:/nft_auth_app/frontend/src/pages/LoginPage.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { useAuth } from '../contexts/AuthContext';\r\nimport { CoinbaseWalletSDK } from '@coinbase/wallet-sdk';\r\nimport { BrowserProvider } from 'ethers';\r\n\r\nconst LoginPage = () => {\r\n  const [isConnecting, setIsConnecting] = useState(false);\r\n  const { user, login, logout, isAuthenticated } = useAuth();\r\n  const navigate = useNavigate();\r\n\r\n  const handleGoToLanding = () => {\r\n    navigate('/');\r\n  };\r\n\r\n  const handleConnect = async () => {\r\n    try {\r\n      setIsConnecting(true);\r\n      const APP_NAME = 'CryptoAuth';\r\n      const RPC_URL = 'https://mainnet.infura.io/v3/151ac0015300430ca8ec9b62f8002589'; // Your Infura URL\r\n      const CHAIN_ID = 1;\r\n\r\n      const coinbaseWallet = new CoinbaseWalletSDK({\r\n        appName: APP_NAME,\r\n        darkMode: false,\r\n        theme: 'light',\r\n        appChainId: CHAIN_ID,\r\n      });\r\n\r\n      const ethereum = coinbaseWallet.makeWeb3Provider(RPC_URL, CHAIN_ID);\r\n      const provider = new BrowserProvider(ethereum);\r\n      const accounts = await provider.send('eth_requestAccounts', []);\r\n      const address = accounts[0];\r\n\r\n      // Set the logged-in user\r\n      login(address);\r\n\r\n      // Navigate to Dashboard automatically\r\n      navigate('/dashboard');\r\n    } catch (error) {\r\n      console.error('❌ Wallet connection error:', error);\r\n      alert('Failed to connect wallet. Check console for error.');\r\n    } finally {\r\n      setIsConnecting(false);\r\n    }\r\n  };\r\n\r\n  const handleLogout = () => {\r\n    logout();\r\n    navigate('/');  // Redirect to Landing page\r\n  };\r\n\r\n  return (\r\n    <div style={{ padding: '2rem', textAlign: 'center' }}>\r\n      <h2>{isAuthenticated ? `Welcome, ${user}` : 'Login'}</h2>\r\n\r\n      <button\r\n        onClick={handleGoToLanding}\r\n        style={{\r\n          background: 'none',\r\n          border: 'none',\r\n          fontSize: '1.5rem',\r\n          fontWeight: 'bold',\r\n          cursor: 'pointer',\r\n          color: '#4f46e5',\r\n          marginBottom: '2rem'\r\n        }}\r\n      >\r\n        CryptoAuth\r\n      </button>\r\n\r\n      <button\r\n        onClick={isAuthenticated ? handleLogout : handleConnect}\r\n        style={{\r\n          padding: '0.75rem 1.5rem',\r\n          backgroundColor: '#4f46e5',\r\n          color: 'white',\r\n          fontSize: '1rem',\r\n          border: 'none',\r\n          borderRadius: '8px',\r\n          cursor: 'pointer',\r\n        }}\r\n      >\r\n        {isAuthenticated ? 'Log Out' : isConnecting ? 'Connecting...' : 'Connect Coinbase Wallet'}\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LoginPage;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}