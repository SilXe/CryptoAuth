{"ast":null,"code":"var _jsxFileName = \"C:\\\\nft_auth_app\\\\frontend\\\\src\\\\pages\\\\LoginPage.jsx\";\nimport React from 'react';\nimport CoinbaseWalletSDK from '@coinbase/wallet-sdk';\nimport { BrowserProvider } from 'ethers';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst LoginPage = () => {\n  const handleCoinbaseLogin = async () => {\n    try {\n      const APP_NAME = 'CryptoAuth';\n      const CHAIN_ID = 1;\n      const RPC_URL = 'https://mainnet.infura.io/v3/151ac0015300430ca8ec9b62f8002589';\n      const coinbaseWallet = new CoinbaseWalletSDK({\n        appName: APP_NAME,\n        appLogoUrl: 'https://example.com/logo.png',\n        // Optional but helps\n        darkMode: false,\n        theme: 'light',\n        appChainId: CHAIN_ID\n      });\n\n      // ‚úÖ Wrap both in one config object (Coinbase Wallet requires this shape)\n      const ethereum = coinbaseWallet.makeWeb3Provider(RPC_URL, {\n        chainId: CHAIN_ID,\n        jsonRpcUrl: RPC_URL\n      });\n      const provider = new BrowserProvider(ethereum);\n      const accounts = await provider.send('eth_requestAccounts', []);\n      const address = accounts[0];\n      alert(`üü¢ Connected Wallet: ${address}`);\n    } catch (error) {\n      console.error('‚ùå Wallet connection error:', error);\n      alert('Connection failed. Check console for details.');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      padding: '2rem',\n      textAlign: 'center'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleCoinbaseLogin,\n      style: {\n        padding: '0.75rem 1.5rem',\n        backgroundColor: '#4f46e5',\n        color: 'white',\n        fontSize: '1rem',\n        border: 'none',\n        borderRadius: '8px',\n        cursor: 'pointer'\n      },\n      children: \"Connect Coinbase Wallet\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n};\n_c = LoginPage;\nexport default LoginPage;\nvar _c;\n$RefreshReg$(_c, \"LoginPage\");","map":{"version":3,"names":["React","CoinbaseWalletSDK","BrowserProvider","jsxDEV","_jsxDEV","LoginPage","handleCoinbaseLogin","APP_NAME","CHAIN_ID","RPC_URL","coinbaseWallet","appName","appLogoUrl","darkMode","theme","appChainId","ethereum","makeWeb3Provider","chainId","jsonRpcUrl","provider","accounts","send","address","alert","error","console","style","padding","textAlign","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","backgroundColor","color","fontSize","border","borderRadius","cursor","_c","$RefreshReg$"],"sources":["C:/nft_auth_app/frontend/src/pages/LoginPage.jsx"],"sourcesContent":["import React from 'react';\r\nimport CoinbaseWalletSDK from '@coinbase/wallet-sdk';\r\nimport { BrowserProvider } from 'ethers';\r\n\r\nconst LoginPage = () => {\r\n  const handleCoinbaseLogin = async () => {\r\n    try {\r\n      const APP_NAME = 'CryptoAuth';\r\n      const CHAIN_ID = 1;\r\n      const RPC_URL = 'https://mainnet.infura.io/v3/151ac0015300430ca8ec9b62f8002589';\r\n\r\n      const coinbaseWallet = new CoinbaseWalletSDK({\r\n        appName: APP_NAME,\r\n        appLogoUrl: 'https://example.com/logo.png', // Optional but helps\r\n        darkMode: false,\r\n        theme: 'light',\r\n        appChainId: CHAIN_ID\r\n      });\r\n\r\n      // ‚úÖ Wrap both in one config object (Coinbase Wallet requires this shape)\r\n      const ethereum = coinbaseWallet.makeWeb3Provider(RPC_URL, {\r\n        chainId: CHAIN_ID,\r\n        jsonRpcUrl: RPC_URL\r\n      });\r\n\r\n      const provider = new BrowserProvider(ethereum);\r\n      const accounts = await provider.send('eth_requestAccounts', []);\r\n      const address = accounts[0];\r\n\r\n      alert(`üü¢ Connected Wallet: ${address}`);\r\n    } catch (error) {\r\n      console.error('‚ùå Wallet connection error:', error);\r\n      alert('Connection failed. Check console for details.');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div style={{ padding: '2rem', textAlign: 'center' }}>\r\n      <h2>Login</h2>\r\n      <button\r\n        onClick={handleCoinbaseLogin}\r\n        style={{\r\n          padding: '0.75rem 1.5rem',\r\n          backgroundColor: '#4f46e5',\r\n          color: 'white',\r\n          fontSize: '1rem',\r\n          border: 'none',\r\n          borderRadius: '8px',\r\n          cursor: 'pointer',\r\n        }}\r\n      >\r\n        Connect Coinbase Wallet\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LoginPage;\r\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,iBAAiB,MAAM,sBAAsB;AACpD,SAASC,eAAe,QAAQ,QAAQ;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEzC,MAAMC,SAAS,GAAGA,CAAA,KAAM;EACtB,MAAMC,mBAAmB,GAAG,MAAAA,CAAA,KAAY;IACtC,IAAI;MACF,MAAMC,QAAQ,GAAG,YAAY;MAC7B,MAAMC,QAAQ,GAAG,CAAC;MAClB,MAAMC,OAAO,GAAG,+DAA+D;MAE/E,MAAMC,cAAc,GAAG,IAAIT,iBAAiB,CAAC;QAC3CU,OAAO,EAAEJ,QAAQ;QACjBK,UAAU,EAAE,8BAA8B;QAAE;QAC5CC,QAAQ,EAAE,KAAK;QACfC,KAAK,EAAE,OAAO;QACdC,UAAU,EAAEP;MACd,CAAC,CAAC;;MAEF;MACA,MAAMQ,QAAQ,GAAGN,cAAc,CAACO,gBAAgB,CAACR,OAAO,EAAE;QACxDS,OAAO,EAAEV,QAAQ;QACjBW,UAAU,EAAEV;MACd,CAAC,CAAC;MAEF,MAAMW,QAAQ,GAAG,IAAIlB,eAAe,CAACc,QAAQ,CAAC;MAC9C,MAAMK,QAAQ,GAAG,MAAMD,QAAQ,CAACE,IAAI,CAAC,qBAAqB,EAAE,EAAE,CAAC;MAC/D,MAAMC,OAAO,GAAGF,QAAQ,CAAC,CAAC,CAAC;MAE3BG,KAAK,CAAC,wBAAwBD,OAAO,EAAE,CAAC;IAC1C,CAAC,CAAC,OAAOE,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,4BAA4B,EAAEA,KAAK,CAAC;MAClDD,KAAK,CAAC,+CAA+C,CAAC;IACxD;EACF,CAAC;EAED,oBACEpB,OAAA;IAAKuB,KAAK,EAAE;MAAEC,OAAO,EAAE,MAAM;MAAEC,SAAS,EAAE;IAAS,CAAE;IAAAC,QAAA,gBACnD1B,OAAA;MAAA0B,QAAA,EAAI;IAAK;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACd9B,OAAA;MACE+B,OAAO,EAAE7B,mBAAoB;MAC7BqB,KAAK,EAAE;QACLC,OAAO,EAAE,gBAAgB;QACzBQ,eAAe,EAAE,SAAS;QAC1BC,KAAK,EAAE,OAAO;QACdC,QAAQ,EAAE,MAAM;QAChBC,MAAM,EAAE,MAAM;QACdC,YAAY,EAAE,KAAK;QACnBC,MAAM,EAAE;MACV,CAAE;MAAAX,QAAA,EACH;IAED;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACN,CAAC;AAEV,CAAC;AAACQ,EAAA,GAnDIrC,SAAS;AAqDf,eAAeA,SAAS;AAAC,IAAAqC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}