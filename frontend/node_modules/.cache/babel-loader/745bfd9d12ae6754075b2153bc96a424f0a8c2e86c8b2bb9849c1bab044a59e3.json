{"ast":null,"code":"var _jsxFileName = \"C:\\\\nft_auth_app\\\\frontend\\\\src\\\\contexts\\\\AuthContext.jsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext();\nexport const AuthProvider = ({\n  children\n}) => {\n  _s();\n  const [address, setAddress] = useState(null); // Wallet address\n  const [role, setRole] = useState(null); // NFT role (member, intern, manager)\n\n  const login = async (walletAddress, userRole) => {\n    setAddress(walletAddress);\n    setRole(userRole);\n  };\n  const logout = () => {\n    setAddress(null);\n    setRole(null);\n  };\n  const isAuthenticated = !!address;\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      address,\n      role,\n      login,\n      logout,\n      isAuthenticated\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 5\n  }, this);\n};\n_s(AuthProvider, \"CJcPEEPW8eIvm9TTUmjph9OIphk=\");\n_c = AuthProvider;\nexport const useAuth = () => {\n  _s2();\n  return useContext(AuthContext);\n};\n_s2(useAuth, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","jsxDEV","_jsxDEV","AuthContext","AuthProvider","children","_s","address","setAddress","role","setRole","login","walletAddress","userRole","logout","isAuthenticated","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","useAuth","_s2","$RefreshReg$"],"sources":["C:/nft_auth_app/frontend/src/contexts/AuthContext.jsx"],"sourcesContent":["import React, { createContext, useContext, useState } from 'react';\r\n\r\nconst AuthContext = createContext();\r\n\r\nexport const AuthProvider = ({ children }) => {\r\n  const [address, setAddress] = useState(null);      // Wallet address\r\n  const [role, setRole] = useState(null);            // NFT role (member, intern, manager)\r\n\r\n  const login = async (walletAddress, userRole) => {\r\n    setAddress(walletAddress);\r\n    setRole(userRole);\r\n  };\r\n\r\n  const logout = () => {\r\n    setAddress(null);\r\n    setRole(null);\r\n  };\r\n\r\n  const isAuthenticated = !!address;\r\n\r\n  return (\r\n    <AuthContext.Provider value={{ address, role, login, logout, isAuthenticated }}>\r\n      {children}\r\n    </AuthContext.Provider>\r\n  );\r\n};\r\n\r\nexport const useAuth = () => useContext(AuthContext);\r\n"],"mappings":";;;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,UAAU,EAAEC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnE,MAAMC,WAAW,gBAAGL,aAAa,CAAC,CAAC;AAEnC,OAAO,MAAMM,YAAY,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EAC5C,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGR,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAM;EACnD,MAAM,CAACS,IAAI,EAAEC,OAAO,CAAC,GAAGV,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAY;;EAEnD,MAAMW,KAAK,GAAG,MAAAA,CAAOC,aAAa,EAAEC,QAAQ,KAAK;IAC/CL,UAAU,CAACI,aAAa,CAAC;IACzBF,OAAO,CAACG,QAAQ,CAAC;EACnB,CAAC;EAED,MAAMC,MAAM,GAAGA,CAAA,KAAM;IACnBN,UAAU,CAAC,IAAI,CAAC;IAChBE,OAAO,CAAC,IAAI,CAAC;EACf,CAAC;EAED,MAAMK,eAAe,GAAG,CAAC,CAACR,OAAO;EAEjC,oBACEL,OAAA,CAACC,WAAW,CAACa,QAAQ;IAACC,KAAK,EAAE;MAAEV,OAAO;MAAEE,IAAI;MAAEE,KAAK;MAAEG,MAAM;MAAEC;IAAgB,CAAE;IAAAV,QAAA,EAC5EA;EAAQ;IAAAa,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACW,CAAC;AAE3B,CAAC;AAACf,EAAA,CArBWF,YAAY;AAAAkB,EAAA,GAAZlB,YAAY;AAuBzB,OAAO,MAAMmB,OAAO,GAAGA,CAAA;EAAAC,GAAA;EAAA,OAAMzB,UAAU,CAACI,WAAW,CAAC;AAAA;AAACqB,GAAA,CAAxCD,OAAO;AAAA,IAAAD,EAAA;AAAAG,YAAA,CAAAH,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}